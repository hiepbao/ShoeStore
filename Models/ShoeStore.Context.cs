//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShoeStore.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShoeStoreEntities : DbContext
    {
        public ShoeStoreEntities()
            : base("name=ShoeStoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<DetailReceipt> DetailReceipts { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<ProductColorSize> ProductColorSizes { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Receipt> Receipts { get; set; }
        public virtual DbSet<Size> Sizes { get; set; }
        public virtual DbSet<StatusRC> StatusRCs { get; set; }
    
        public virtual ObjectResult<Account_List_Result> Account_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Account_List_Result>("Account_List");
        }
    
        public virtual ObjectResult<string> Account_Signup(string username, string password, string customerName, string email, string phoneNumber, string address)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Account_Signup", usernameParameter, passwordParameter, customerNameParameter, emailParameter, phoneNumberParameter, addressParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> addSizeColor(Nullable<int> id, Nullable<int> size, Nullable<int> color, Nullable<int> qty)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(int));
    
            var colorParameter = color.HasValue ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("addSizeColor", idParameter, sizeParameter, colorParameter, qtyParameter);
        }
    
        public virtual int AddToCart(string username, Nullable<int> productId, Nullable<int> size, Nullable<int> color)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(int));
    
            var colorParameter = color.HasValue ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddToCart", usernameParameter, productIdParameter, sizeParameter, colorParameter);
        }
    
        public virtual ObjectResult<string> AuthenticateLogin(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AuthenticateLogin", usernameParameter);
        }
    
        public virtual int AuthenticateRegister(string username, string password, string customerName, string email, string phoneNumber, string address, byte[] image)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AuthenticateRegister", usernameParameter, passwordParameter, customerNameParameter, emailParameter, phoneNumberParameter, addressParameter, imageParameter);
        }
    
        public virtual ObjectResult<Customer_Details_Result> Customer_Details(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer_Details_Result>("Customer_Details", usernameParameter);
        }
    
        public virtual ObjectResult<Customer_List_Result> Customer_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer_List_Result>("Customer_List");
        }
    
        public virtual int DeleteProduct(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProduct", productIDParameter);
        }
    
        public virtual ObjectResult<Get_All_ProductCS_Result> Get_All_ProductCS(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_ProductCS_Result>("Get_All_ProductCS", productIdParameter);
        }
    
        public virtual ObjectResult<Get_session_Result> Get_session(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_session_Result>("Get_session", usernameParameter);
        }
    
        public virtual int GetCartOfUser(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCartOfUser", usernameParameter);
        }
    
        public virtual ObjectResult<GetCategory_Result> GetCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategory_Result>("GetCategory");
        }
    
        public virtual ObjectResult<GetColor_Result> GetColor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetColor_Result>("GetColor");
        }
    
        public virtual ObjectResult<GetColorOfProduct_Result> GetColorOfProduct(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetColorOfProduct_Result>("GetColorOfProduct", productIdParameter);
        }
    
        public virtual ObjectResult<GetImageToCart_Result> GetImageToCart(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetImageToCart_Result>("GetImageToCart", productIdParameter);
        }
    
        public virtual ObjectResult<GetProductDetail_Result> GetProductDetail(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductDetail_Result>("GetProductDetail", productIdParameter);
        }
    
        public virtual ObjectResult<GetProducts_Result> GetProducts(Nullable<int> qty, string type)
        {
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProducts_Result>("GetProducts", qtyParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetQuantity(Nullable<int> productId, Nullable<int> sizeId, Nullable<int> colorId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var sizeIdParameter = sizeId.HasValue ?
                new ObjectParameter("sizeId", sizeId) :
                new ObjectParameter("sizeId", typeof(int));
    
            var colorIdParameter = colorId.HasValue ?
                new ObjectParameter("ColorId", colorId) :
                new ObjectParameter("ColorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetQuantity", productIdParameter, sizeIdParameter, colorIdParameter);
        }
    
        public virtual ObjectResult<GetSize_Result> GetSize()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSize_Result>("GetSize");
        }
    
        public virtual ObjectResult<GetSizeOfProduct_Result> GetSizeOfProduct(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSizeOfProduct_Result>("GetSizeOfProduct", productIdParameter);
        }
    
        public virtual int GetUserCart(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUserCart", usernameParameter);
        }
    
        public virtual ObjectResult<getUserSession_Result> getUserSession(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserSession_Result>("getUserSession", usernameParameter);
        }
    
        public virtual int InsertProduct(string productName, Nullable<double> productPrice, Nullable<int> productCategory, string description)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productPriceParameter = productPrice.HasValue ?
                new ObjectParameter("ProductPrice", productPrice) :
                new ObjectParameter("ProductPrice", typeof(double));
    
            var productCategoryParameter = productCategory.HasValue ?
                new ObjectParameter("ProductCategory", productCategory) :
                new ObjectParameter("ProductCategory", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProduct", productNameParameter, productPriceParameter, productCategoryParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<string> IsAdmin(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("IsAdmin", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Receipt_Confirm(Nullable<int> receiptId)
        {
            var receiptIdParameter = receiptId.HasValue ?
                new ObjectParameter("ReceiptId", receiptId) :
                new ObjectParameter("ReceiptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Receipt_Confirm", receiptIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Receipt_Delete(Nullable<int> receiptId)
        {
            var receiptIdParameter = receiptId.HasValue ?
                new ObjectParameter("ReceiptId", receiptId) :
                new ObjectParameter("ReceiptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Receipt_Delete", receiptIdParameter);
        }
    
        public virtual int RemoveCart(string userName, Nullable<int> productId)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveCart", userNameParameter, productIdParameter);
        }
    
        public virtual ObjectResult<SearchProduct_Result> SearchProduct(string productName)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchProduct_Result>("SearchProduct", productNameParameter);
        }
    
        public virtual ObjectResult<SearchProductByName_Result> SearchProductByName(string productName)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchProductByName_Result>("SearchProductByName", productNameParameter);
        }
    
        public virtual ObjectResult<Statistic_Receipt_Month_Result> Statistic_Receipt_Month(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Statistic_Receipt_Month_Result>("Statistic_Receipt_Month", yearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ThongKe_SelectYear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ThongKe_SelectYear");
        }
    
        public virtual int Update_ProductCS_Quantity(Nullable<int> id, Nullable<int> productId, Nullable<int> size, Nullable<int> color, Nullable<int> quantity)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(int));
    
            var colorParameter = color.HasValue ?
                new ObjectParameter("color", color) :
                new ObjectParameter("color", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_ProductCS_Quantity", idParameter, productIdParameter, sizeParameter, colorParameter, quantityParameter);
        }
    
        public virtual int UpdateProduct(Nullable<int> productID, string productName, Nullable<double> productPrice, Nullable<int> productCategory, string description)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productPriceParameter = productPrice.HasValue ?
                new ObjectParameter("ProductPrice", productPrice) :
                new ObjectParameter("ProductPrice", typeof(double));
    
            var productCategoryParameter = productCategory.HasValue ?
                new ObjectParameter("ProductCategory", productCategory) :
                new ObjectParameter("ProductCategory", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProduct", productIDParameter, productNameParameter, productPriceParameter, productCategoryParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UploadImageToProduct(byte[] imgData, string imgExt, Nullable<int> productId)
        {
            var imgDataParameter = imgData != null ?
                new ObjectParameter("ImgData", imgData) :
                new ObjectParameter("ImgData", typeof(byte[]));
    
            var imgExtParameter = imgExt != null ?
                new ObjectParameter("ImgExt", imgExt) :
                new ObjectParameter("ImgExt", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UploadImageToProduct", imgDataParameter, imgExtParameter, productIdParameter);
        }
    
        public virtual ObjectResult<Validate_Role_Result> Validate_Role(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Validate_Role_Result>("Validate_Role", usernameParameter);
        }
    
        public virtual ObjectResult<Statistic_Income_Month_Result> Statistic_Income_Month(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Statistic_Income_Month_Result>("Statistic_Income_Month", yearParameter);
        }
    
        public virtual ObjectResult<Receipt_Details_Result> Receipt_Details(Nullable<int> receiptId)
        {
            var receiptIdParameter = receiptId.HasValue ?
                new ObjectParameter("ReceiptId", receiptId) :
                new ObjectParameter("ReceiptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Receipt_Details_Result>("Receipt_Details", receiptIdParameter);
        }
    
        public virtual int UpdateCustomer(string customerUsername, string customerName, string customerEmail, string customerPNum, string customerAddress)
        {
            var customerUsernameParameter = customerUsername != null ?
                new ObjectParameter("CustomerUsername", customerUsername) :
                new ObjectParameter("CustomerUsername", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var customerEmailParameter = customerEmail != null ?
                new ObjectParameter("CustomerEmail", customerEmail) :
                new ObjectParameter("CustomerEmail", typeof(string));
    
            var customerPNumParameter = customerPNum != null ?
                new ObjectParameter("CustomerPNum", customerPNum) :
                new ObjectParameter("CustomerPNum", typeof(string));
    
            var customerAddressParameter = customerAddress != null ?
                new ObjectParameter("CustomerAddress", customerAddress) :
                new ObjectParameter("CustomerAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomer", customerUsernameParameter, customerNameParameter, customerEmailParameter, customerPNumParameter, customerAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Cus_DoiMK(string maNhanVien, string matKhau)
        {
            var maNhanVienParameter = maNhanVien != null ?
                new ObjectParameter("MaNhanVien", maNhanVien) :
                new ObjectParameter("MaNhanVien", typeof(string));
    
            var matKhauParameter = matKhau != null ?
                new ObjectParameter("MatKhau", matKhau) :
                new ObjectParameter("MatKhau", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Cus_DoiMK", maNhanVienParameter, matKhauParameter);
        }
    }
}
